{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\reactcourses\\\\project-7\\\\src\\\\Createnote.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nconst Note = props => {\n  _s();\n\n  const [isExpand, setIsExpand] = useState(false);\n  const [note, setNotes] = useState({\n    title: \"\",\n    content: \"\"\n  });\n\n  const inputEvent = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setNotes(prevData => {\n      return { ...prevData,\n        [name]: value\n      };\n    });\n  };\n\n  const addEvent = () => {\n    props.passNote(note);\n    setNotes({\n      title: \"\",\n      content: \"\"\n    });\n  };\n\n  const expandIt = () => {\n    setIsExpand(true);\n  };\n\n  const backToOriginal = () => {\n    setIsExpand(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_note\",\n      onDoubleClick: backToOriginal,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [isExpand ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Title\",\n          name: \"title\",\n          autoComplete: \"off\",\n          value: note.title,\n          onChange: inputEvent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Write a note....\",\n          rows: \"\",\n          coloum: \"1\",\n          name: \"content\",\n          value: note.content,\n          onChange: inputEvent,\n          onClick: expandIt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), isExpand ? /*#__PURE__*/_jsxDEV(Button, {\n          onClick: addEvent,\n          children: /*#__PURE__*/_jsxDEV(AddIcon, {\n            className: \"plus_sign\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Note, \"RhRPXJqIiqwTS2tclu7ZsoDGAbk=\");\n\n_c = Note;\nexport default Note;\n\nvar _c;\n\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"sources":["D:/reactcourses/project-7/src/Createnote.jsx"],"names":["React","useState","Button","AddIcon","Note","props","isExpand","setIsExpand","note","setNotes","title","content","inputEvent","event","name","value","target","prevData","addEvent","passNote","expandIt","backToOriginal"],"mappings":";;;;;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,wBAApB;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACO,IAAD,EAAOC,QAAP,IAAmBR,QAAQ,CAAC;AAChCS,IAAAA,KAAK,EAAE,EADyB;AAEhCC,IAAAA,OAAO,EAAE;AAFuB,GAAD,CAAjC;;AAKA,QAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBF,KAAK,CAACG,MAA5B;AAEAP,IAAAA,QAAQ,CAAEQ,QAAD,IAAc;AACrB,aAAO,EACL,GAAGA,QADE;AAEL,SAACH,IAAD,GAAQC;AAFH,OAAP;AAID,KALO,CAAR;AAMD,GATD;;AAWA,QAAMG,QAAQ,GAAG,MAAM;AACrBb,IAAAA,KAAK,CAACc,QAAN,CAAeX,IAAf;AACAC,IAAAA,QAAQ,CAAC;AACPC,MAAAA,KAAK,EAAE,EADA;AAEPC,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAID,GAND;;AAQA,QAAMS,QAAQ,GAAG,MAAM;AACrBb,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFD;;AAIA,QAAMc,cAAc,GAAG,MAAM;AAC3Bd,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GAFD;;AAIA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,aAAa,EAAEc,cAA1C;AAAA,6BACE;AAAA,mBACGf,QAAQ,gBACP;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,OAFd;AAGE,UAAA,IAAI,EAAC,OAHP;AAIE,UAAA,YAAY,EAAC,KAJf;AAKE,UAAA,KAAK,EAAEE,IAAI,CAACE,KALd;AAME,UAAA,QAAQ,EAAEE;AANZ;AAAA;AAAA;AAAA;AAAA,gBADO,GASL,IAVN,eAYE;AAAA;AAAA;AAAA;AAAA,gBAZF,eAaE;AACE,UAAA,WAAW,EAAC,kBADd;AAEE,UAAA,IAAI,EAAC,EAFP;AAGE,UAAA,MAAM,EAAC,GAHT;AAIE,UAAA,IAAI,EAAC,SAJP;AAKE,UAAA,KAAK,EAAEJ,IAAI,CAACG,OALd;AAME,UAAA,QAAQ,EAAEC,UANZ;AAOE,UAAA,OAAO,EAAEQ;AAPX;AAAA;AAAA;AAAA;AAAA,gBAbF,EAuBGd,QAAQ,gBACP,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEY,QAAjB;AAAA,iCACE,QAAC,OAAD;AAAS,YAAA,SAAS,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADO,GAIL,IA3BN;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAmCD,CArED;;GAAMd,I;;KAAAA,I;AAuEN,eAAeA,IAAf","sourcesContent":["\r\nimport React, { useState } from \"react\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nconst Note = (props) => {\r\n  const [isExpand, setIsExpand] = useState(false);\r\n  const [note, setNotes] = useState({\r\n    title: \"\",\r\n    content: \"\",\r\n  });\r\n\r\n  const inputEvent = (event) => {\r\n    const {name, value} = event.target;\r\n\r\n    setNotes((prevData) => {\r\n      return {\r\n        ...prevData,\r\n        [name]: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const addEvent = () => {\r\n    props.passNote(note);\r\n    setNotes({\r\n      title: \"\",\r\n      content: \"\",\r\n    });\r\n  };\r\n\r\n  const expandIt = () => {\r\n    setIsExpand(true);\r\n  };\r\n\r\n  const backToOriginal = () => {\r\n    setIsExpand(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"main_note\" onDoubleClick={backToOriginal}>\r\n        <form>\r\n          {isExpand ? (\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Title\"\r\n              name=\"title\"\r\n              autoComplete=\"off\"\r\n              value={note.title}\r\n              onChange={inputEvent}\r\n            />\r\n          ) : null}\r\n\r\n          <br />\r\n          <textarea\r\n            placeholder=\"Write a note....\"\r\n            rows=\"\"\r\n            coloum=\"1\"\r\n            name=\"content\"\r\n            value={note.content}\r\n            onChange={inputEvent}\r\n            onClick={expandIt}\r\n          ></textarea>\r\n\r\n          {isExpand ? (\r\n            <Button onClick={addEvent}>\r\n              <AddIcon className=\"plus_sign\" />\r\n            </Button>\r\n          ) : null}\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Note;\r\n\r\n"]},"metadata":{},"sourceType":"module"}